// ascii code : cogmind code
var cogmindCodePoints = {
    0x00: 0x00, // nul
    // 0x01:    x, // soh
    // 0x02:    x, // stx
    // 0x03:    x, // etx
    // 0x04:    x, // eot
    // 0x05:    x, // enq
    // 0x06:    x, // ack
    // 0x07:    x, // bel
    // 0x08:    x, // bs
    // 0x09:    x, // ht
    // 0x0a:    x, // nl
    // 0x0b:    x, // vt
    // 0x0c:    x, // np
    // 0x0d:    x, // cr
    // 0x0e:    x, // so
    // 0x0f:    x, // si
    // 0x10:    x, // dle
    // 0x11:    x, // dc1
    // 0x12:    x, // dc2
    // 0x13:    x, // dc3
    // 0x14:    x, // dc4
    // 0x15:    x, // nak
    // 0x16:    x, // syn
    // 0x17:    x, // etb
    // 0x18:    x, // can
    // 0x19:    x, // em
    // 0x1a:    x, // sub
    // 0x1b:    x, // esc
    // 0x1c:    x, // fs
    // 0x1d:    x, // gs
    // 0x1e:    x, // rs
    // 0x1f:    x, // us

    0x20: 0x00, // sp ??
    0x21: 0x01, // !
    0x22: 0x02, // "
    0x23: 0x03, // #
    0x24: 0x04, // $
    0x25: 0x05, // %
    0x26: 0x06, // &
    0x27: 0x07, // '
    0x28: 0x08, // (
    0x29: 0x09, // )
    0x2a: 0x0a, // *
    0x2b: 0x0b, // +
    0x2c: 0x0c, // ,
    0x2d: 0x0d, // -
    0x2e: 0x0e, // .
    0x2f: 0x0f, // /

    0x30: 0x10, // 0
    0x31: 0x11, // 1
    0x32: 0x12, // 2
    0x33: 0x13, // 3
    0x34: 0x14, // 4
    0x35: 0x15, // 5
    0x36: 0x16, // 6
    0x37: 0x17, // 7
    0x38: 0x18, // 8
    0x39: 0x19, // 9
    0x3a: 0x1a, // :
    0x3b: 0x1b, // ;
    0x3c: 0x1c, // <
    0x3d: 0x1d, // =
    0x3e: 0x1e, // >
    0x3f: 0x1f, // ?

    0x40: 0x20, // @

    0x41: 0x40, // A
    0x42: 0x41, // B
    0x43: 0x42, // C
    0x44: 0x43, // D
    0x45: 0x44, // E
    0x46: 0x45, // F
    0x47: 0x46, // G
    0x48: 0x47, // H
    0x49: 0x48, // I
    0x4a: 0x49, // J
    0x4b: 0x4a, // K
    0x4c: 0x4b, // L
    0x4d: 0x4c, // M
    0x4e: 0x4d, // N
    0x4f: 0x4e, // O
    0x50: 0x4f, // P
    0x51: 0x50, // Q
    0x52: 0x51, // R
    0x53: 0x52, // S
    0x54: 0x53, // T
    0x55: 0x54, // U
    0x56: 0x55, // V
    0x57: 0x56, // W
    0x58: 0x57, // X
    0x59: 0x58, // Y
    0x5a: 0x59, // Z

    0x5b: 0x21, // [
    0x5c: 0x22, // \
    0x5d: 0x23, // ]
    0x5e: 0x24, // ^
    0x5f: 0x25, // _
    0x60: 0x26, // `

    0x61: 0x60, // a
    0x62: 0x61, // b
    0x63: 0x62, // c
    0x64: 0x63, // d
    0x65: 0x64, // e
    0x66: 0x65, // f
    0x67: 0x66, // g
    0x68: 0x67, // h
    0x69: 0x68, // i
    0x6a: 0x69, // j
    0x6b: 0x6a, // k
    0x6c: 0x6b, // l
    0x6d: 0x6c, // m
    0x6e: 0x6d, // n
    0x6f: 0x6e, // o
    0x70: 0x6f, // p
    0x71: 0x70, // q
    0x72: 0x71, // r
    0x73: 0x72, // s
    0x74: 0x73, // t
    0x75: 0x74, // u
    0x76: 0x75, // v
    0x77: 0x76, // w
    0x78: 0x77, // x
    0x79: 0x78, // y
    0x7a: 0x79, // z

    0x7b: 0x27, // {
    0x7c: 0x28, // |
    0x7d: 0x29, // }
    0x7e: 0x2a, // ~

    // 0x7f:    x, // del ???

    0xb0: 0x2b, // thin fill
    0xb1: 0x2c, // med fill
    0xb2: 0x2d, // thick fill

    0xb3: 0x80, // line
    0xb4: 0x83, // line
    0xb5: 0xa0, // line
    0xb6: 0xa1, // line
    0xb7: 0xae, // line
    0xb8: 0xaf, // line
    0xb9: 0x8f, // line
    0xba: 0x8c, // 2 vert line
    0xbb: 0x95, // line
    0xbc: 0x96, // line
    0xbd: 0xb0, // line
    0xbe: 0xb1, // line
    0xbf: 0x89, // line

    0xc0: 0x87, // line
    0xc1: 0x84, // line
    0xc2: 0x86, // line
    0xc3: 0x85, // line
    0xc4: 0x81, // line
    0xc5: 0x82, // line (actual 82)
    0xc6: 0xa3, // line
    0xc7: 0xa2, // line
    0xc8: 0x93, // line
    0xc9: 0x94, // line
    0xca: 0x90, // line
    0xcb: 0x92, // line
    0xcc: 0x91, // line
    0xcd: 0x8d, // line
    0xce: 0x8e, // line
    0xcf: 0xa7, // line

    0xd0: 0xa6, // line
    0xd1: 0xa8, // line
    0xd2: 0xa9, // line
    0xd3: 0xaa, // line
    0xd4: 0xab, // line 2 right 1 up
    0xd5: 0xac, // line
    0xd6: 0xad, // line
    0xd7: 0xa4, // line 2 v 1 h
    0xd8: 0xa5, // line
    0xd9: 0x82, // line
    0xda: 0x8a, // line
    0xdb: 0xb2, // block
    0xdc: 0xb3, // block
    0xdd: 0xb4, // block
    0xde: 0xb5, // block
    0xdf: 0xb6, // block

    0xfe: 0x5e, // empty checkbox
    0xff: 0x5f  // full checkbox
};

if (typeof module !== 'undefined') {
    module.exports = cogmindCodePoints;
}
